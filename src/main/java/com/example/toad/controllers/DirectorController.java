package com.example.toad.controllers;

import java.security.Timestamp;
import java.sql.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.example.toad.entities.Director;
import com.example.toad.repositories.DirectorRepository;

@Controller 
@RequestMapping(path="/api") 
public class DirectorController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private DirectorRepository directorRepository;

  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewDirector (@RequestParam Integer id_director, @RequestParam String nom, @RequestParam String prenom, @RequestParam java.sql.Timestamp date_naissance
      , @RequestParam String nationalite) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

    Director n = new Director();
    n.setid_director(id_director);
    n.setnom(nom);
    n.setprenom(prenom);
    n.setdate_naissance(date_naissance);
    n.setnationalite(nationalite);
    directorRepository.save(n);
    return "Saved";
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Director> getAllDirectors() {
    // This returns a JSON or XML with the users
    return directorRepository.findAll();
  }
}